{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/contexts/AnimeContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Anime, Category } from '@/types/anime';\n\ninterface AnimeContextType {\n  animes: Anime[];\n  categories: Category[];\n  addAnime: (anime: Anime) => void;\n  updateAnime: (id: string, anime: Partial<Anime>) => void;\n  deleteAnime: (id: string) => void;\n  addCategory: (category: Category) => void;\n  updateCategory: (id: string, category: Partial<Category>) => void;\n  deleteCategory: (id: string) => void;\n  getAnimeById: (id: string) => Anime | undefined;\n  getCategoryById: (id: string) => Category | undefined;\n  getCategoriesByIds: (ids: string[]) => Category[];\n}\n\nconst AnimeContext = createContext<AnimeContextType | undefined>(undefined);\n\n// Categorías predeterminadas\nconst defaultCategories: Category[] = [\n  { id: '1', name: 'Acción', color: '#ef4444', description: 'Animes con mucha acción y combates' },\n  { id: '2', name: 'Romance', color: '#ec4899', description: 'Historias de amor y relaciones' },\n  { id: '3', name: 'Comedia', color: '#f59e0b', description: 'Animes divertidos y humorísticos' },\n  { id: '4', name: 'Drama', color: '#8b5cf6', description: 'Historias emotivas y dramáticas' },\n  { id: '5', name: 'Fantasía', color: '#10b981', description: 'Mundos mágicos y fantásticos' },\n  { id: '6', name: 'Ciencia Ficción', color: '#3b82f6', description: 'Tecnología futurista y espacial' },\n  { id: '7', name: 'Slice of Life', color: '#6b7280', description: 'Vida cotidiana y realista' },\n  { id: '8', name: 'Thriller', color: '#1f2937', description: 'Suspenso y misterio' },\n];\n\nexport function AnimeProvider({ children }: { children: React.ReactNode }) {\n  const [animes, setAnimes] = useState<Anime[]>([]);\n  const [categories, setCategories] = useState<Category[]>(defaultCategories);\n\n  // Cargar datos del localStorage al inicializar\n  useEffect(() => {\n    const savedAnimes = localStorage.getItem('animes');\n    const savedCategories = localStorage.getItem('categories');\n    \n    if (savedAnimes) {\n      setAnimes(JSON.parse(savedAnimes));\n    }\n    \n    if (savedCategories) {\n      setCategories(JSON.parse(savedCategories));\n    }\n  }, []);\n\n  // Guardar animes en localStorage cuando cambien\n  useEffect(() => {\n    localStorage.setItem('animes', JSON.stringify(animes));\n  }, [animes]);\n\n  // Guardar categorías en localStorage cuando cambien\n  useEffect(() => {\n    localStorage.setItem('categories', JSON.stringify(categories));\n  }, [categories]);\n\n  const addAnime = (anime: Anime) => {\n    setAnimes(prev => [anime, ...prev]);\n  };\n\n  const updateAnime = (id: string, updatedAnime: Partial<Anime>) => {\n    setAnimes(prev => prev.map(anime => \n      anime.id === id ? { ...anime, ...updatedAnime } : anime\n    ));\n  };\n\n  const deleteAnime = (id: string) => {\n    setAnimes(prev => prev.filter(anime => anime.id !== id));\n  };\n\n  const addCategory = (category: Category) => {\n    setCategories(prev => [...prev, category]);\n  };\n\n  const updateCategory = (id: string, updatedCategory: Partial<Category>) => {\n    setCategories(prev => prev.map(category => \n      category.id === id ? { ...category, ...updatedCategory } : category\n    ));\n  };\n\n  const deleteCategory = (id: string) => {\n    // Remover la categoría de todos los animes que la usen\n    setAnimes(prev => prev.map(anime => ({\n      ...anime,\n      categoryIds: anime.categoryIds.filter(catId => catId !== id)\n    })));\n    \n    // Eliminar la categoría\n    setCategories(prev => prev.filter(category => category.id !== id));\n  };\n\n  const getAnimeById = (id: string) => {\n    return animes.find(anime => anime.id === id);\n  };\n\n  const getCategoryById = (id: string) => {\n    return categories.find(category => category.id === id);\n  };\n\n  const getCategoriesByIds = (ids: string[]) => {\n    return categories.filter(category => ids.includes(category.id));\n  };\n\n  const value: AnimeContextType = {\n    animes,\n    categories,\n    addAnime,\n    updateAnime,\n    deleteAnime,\n    addCategory,\n    updateCategory,\n    deleteCategory,\n    getAnimeById,\n    getCategoryById,\n    getCategoriesByIds,\n  };\n\n  return (\n    <AnimeContext.Provider value={value}>\n      {children}\n    </AnimeContext.Provider>\n  );\n}\n\nexport function useAnime() {\n  const context = useContext(AnimeContext);\n  if (context === undefined) {\n    throw new Error('useAnime must be used within an AnimeProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}